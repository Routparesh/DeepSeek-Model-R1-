name: Deploy DeepSeek Model R1
on:
  push:
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Install Docker on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i my-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl enable docker
          sudo systemctl start docker
          EOF
          ssh -o StrictHostKeyChecking=no -i my-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl enable docker
          sudo systemctl start docker
          EOF

      - name: Run DeepSeek Model and WebUI via Docker
        run: |
          ssh -o StrictHostKeyChecking=no -i my-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          docker run -d -p 8080:8080 --name deepseek-webui openwebui/ollama-webui
          docker run -d --name deepseek-model deepseek-model:latest
          EOF
          ssh -o StrictHostKeyChecking=no -i my-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          docker run -d -p 8080:8080 --name deepseek-webui openwebui/ollama-webui
          docker run -d --name deepseek-model deepseek-model:latest
          EOF

      - name: Confirm WebUI is Running
        run: |
          ssh -o StrictHostKeyChecking=no -i my-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          curl http://localhost:8080
          EOF
          ssh -o StrictHostKeyChecking=no -i my-key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          curl http://localhost:8080
          EOF

      - name: Confirm Load Balancer is Exposing the WebUI
        run: |
          curl http://$(terraform output lb_url)/8080
          curl http://$(terraform output lb_url)/8080
